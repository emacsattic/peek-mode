
* peek-mode
** Introduction
 peek-mode is a minor mode that publishes live Emacs buffers through
 an [[http://elnode.org/][elnode]] server. This means you can view your emacs buffers in a web
 browser as they change. Toggling on peek-mode in a buffer will
 publish it to the server. To unpublish a buffer, toggle peek-mode
 off. (`M-x peek-mode` does the toggle.)

 peek-mode is (very very!) largely based on Brian Taylor's
 <el.wubo@gmail.com> [[https://github.com/netguy204/imp.el][impatient-mode]] . However, impatient-mode does not
 use elnode, but rather a different emacs httpd backend
 <https://github.com/skeeto/emacs-http-server>. I consider peek-mode
 as "impatient-mode ported to elnode".

** Installation 
*** How to install elnode in less than a minute! 
Assuming you're running GNU Emacs 24+, evaluate the following code in your *scratch* buffer. 

#+BEGIN_EXAMPLE
  (require 'package)
  (add-to-list 'package-archives 
      '("marmalade" .
        "http://marmalade-repo.org/packages/"))
  (package-initialize)
#+END_EXAMPLE
  
Now, `M-x package-refresh-contents`. Finally, `M-x package-install RET elnode RET`.
  
Elnode should be installed, and your load-path automatically modified
so that it is accessible. Yay for package managers!

*** peek-mode
Simply clone this repository, make sure peek-mode.el is in your
load-path, and then:

(require 'peek-mode)

** Usage
To use peek-mode, two things have to be in place. `peek-mode` must be
enabled in the buffer(s) you want to peek at, and the elnode server has to be running. 

To start the elnode server on port 8008 on your local machine:

#+begin_src emacs-lisp
  (elnode-start 'peek-mode-dispatcher-handler :port 8008 :host "localhost")
#+end_src

To test, try enabling peek-mode in your *scratch* buffer: `M-x peek-mode`. 

Then launch a web browser, and visit
http://<server>:<port>/peek/. There will be a listing of all the
buffers that currently have peek-mode enabled. Click on one to view
it, then go back to emacs and make some change in that buffer. You
should see the changes immediately reflected in the browser. 
